from dydx3.constants import API_HOST_GOERLI, API_HOST_MAINNET
from decouple import config

# !!!! SELECT MODE !!!!
MODE = "DEVELOPPEMENT" # PRODUCTION, DEVELOPPEMENT

# Close all open positions and orders
ABORT_ALL_POSITIONS = True

# Find Cointegrated Pairs
FIND_COINTEGRATED = True

# Manage Existing Trades
MANAGE_EXITS = True

# Place Trades
PLACE_TRADES = True

# Resolution
RESOLUTION = "1HOUR"

# Stats Windows
WINDOW = 21

# Thresholds - Opening
MAX_HALF_lIFE = 18 # 24
ZSCORE_THRESH = 1.75
USD_PER_TRADE = 100
USD_MIN_COLLATERAL = 1500

# Thresholds - Closing
CLOSE_AT_ZSCORE_CROSS = True

# Ethereum Address
ETHEREUM_ADDRERSS_MAINNET = "0x9d0a39313Ed78c1E449E29CeCcE93A6868579F83"
ETHEREUM_ADDRERSS_TESTNET = "0x1841D078f41f54A3C44b2a9b02f24353371Ce98d" 

# KEYS - Mainnet
ETH_PRIVATE_KEY_MAINNET = config("ETH_PRIVATE_KEY_MAINNET")

STARK_PRIVATE_KEY_MAINNET = config("STARK_PRIVATE_KEY_MAINNET")
DYDX_API_KEY_MAINNET = config("DYDX_API_KEY_MAINNET")
DYDX_API_SECRET_MAINNET = config("DYDX_API_SECRET_MAINNET")
DYDX_API_PASSPHRASE_MAINNET = config("DYDX_API_PASSPHRASE_MAINNET")

# KEYS - Testnet
ETH_PRIVATE_KEY_TESTNET = config("ETH_PRIVATE_KEY_TESTNET")

STARK_PRIVATE_KEY_TESTNET = config("STARK_PRIVATE_KEY_TESTNET")
DYDX_API_KEY_TESTNET = config("DYDX_API_KEY_TESTNET")
DYDX_API_SECRET_TESTNET = config("DYDX_API_SECRET_TESTNET")
DYDX_API_PASSPHRASE_TESTNET = config("DYDX_API_PASSPHRASE_TESTNET")

# KEYS - Production
ETH_PRIVATE_KEY = STARK_PRIVATE_KEY_MAINNET if MODE == "PRODUCTION" else ETH_PRIVATE_KEY_TESTNET
ETHEREUM_ADDRERSS = ETHEREUM_ADDRERSS_MAINNET if MODE == "PRODUCTION" else ETHEREUM_ADDRERSS_TESTNET
STARK_PRIVATE_KEY = STARK_PRIVATE_KEY_MAINNET if MODE == "PRODUCTION" else STARK_PRIVATE_KEY_TESTNET
DYDX_API_KEY = DYDX_API_KEY_MAINNET if MODE == "PRODUCTION" else DYDX_API_KEY_TESTNET
DYDX_API_SECRET = DYDX_API_SECRET_MAINNET if MODE == "PRODUCTION" else DYDX_API_SECRET_TESTNET
DYDX_API_PASSPHRASE = DYDX_API_PASSPHRASE_MAINNET if MODE == "PRODUCTION" else DYDX_API_PASSPHRASE_TESTNET

# HOST - Export
HOST = API_HOST_MAINNET if MODE == "PRODUCTION" else API_HOST_GOERLI

# HTTP Provider
HTTP_PROVIDER_MAINNET = config("HTTP_PROVIDER_MAINNET")
HTTP_PROVIDER_TESTNET = config("HTTP_PROVIDER_TESTNET") 
HTTP_PROVIDER = HTTP_PROVIDER_MAINNET if MODE == "PRODUCTION" else HTTP_PROVIDER_TESTNET

